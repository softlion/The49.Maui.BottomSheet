name: Publish To Nuget

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  DOTNET_NOLOGO: true # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true # Disable sending .NET CLI telemetry
  PROJECT: src/The49.Maui.BottomSheet.csproj
  #required so if it contains special characters they are not interpreted by powershell
  NUGET_AUTH_TOKEN: ${{secrets.NUGET_API_KEY}}
  NUGET_TARGET: https://api.nuget.org/v3/index.json

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET according to global.json
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Build
        shell: pwsh
        run: |
          dotnet workload restore $env:PROJECT
          dotnet build -c Release $env:PROJECT
        
      - name: Package & Publish NuGets
        shell: pwsh
        run: |
          if ($env:GITHUB_EVENT_NAME -eq "release") {
            $VERSION_SUFFIX=""
          }
          else {
            $VERSION_SUFFIX="-ci-$env:GITHUB_RUN_ID"
          }
          echo "VERSION_SUFFIX: $VERSION_SUFFIX"
          
          New-Item -ItemType Directory -Force -Path ./artifacts
          
          dotnet pack --no-build --output ./artifacts -c Release -p:VersionSuffix=$VERSION_SUFFIX $env:PROJECT
          # needs to CD because nuget push can't find nuget packages with a linux style path
          cd ./artifacts
          dotnet nuget push *.nupkg --skip-duplicate -k $env:NUGET_AUTH_TOKEN -s $env:NUGET_TARGET
